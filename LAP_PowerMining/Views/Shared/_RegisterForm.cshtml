@model LAP_PowerMining.Models.ViewModels.Account.VMRegister

@if (ViewBag.LoggedIn != null && ViewBag.LoggedIn == true)
{
    ViewBag.LoggedIn = null;
    <script>
        $(document).ready(function () {
            location.reload(true);
        });
    </script>
}
else
{
    <form id="registerForm" method="post" novalidate="novalidate">
        <h2>Register</h2>
        @Html.AntiForgeryToken()
        <div class="text-danger">
            <strong>
                @ViewBag.ErrorMessage
            </strong>
        </div>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>
    </form>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button onclick="submitRegister()" class="btn btn-success">
                Register
            </button>
        </div>
    </div>
}
<script>
    function submitRegister() {
        $.ajax({
            type: 'post',
            url: 'Account/Register',
            data: {
                Password: $('#Password').val(),
                ConfirmPassword: $('#ConfirmPassword').val(),
                FirstName: $('#FirstName').val(),
                LastName: $('#LastName').val(),
                Email: $('#Email').val()
            },
            success: function (data) {
                $('#loader').dialog('close');
                $('#registerDialog').html('');
                $('#registerDialog').html(data);
            },
            error: function (data) {
                $('#loader').dialog('close');
            },
            beforeSend: function (xhr) {
                $('#loader').dialog('open');
            }
        });
    }
</script>